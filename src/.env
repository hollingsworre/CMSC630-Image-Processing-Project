###################################################################
# Image processing will run in batch mode. Altered images
# will be saved to path defined in SAVE_IMAGES_PATH.
# Use FUNCTION_LIST to select the functions that you wish to run.
# I am assuming an intelligent user (LOL) who would not do things
# such as trying to dilate or erode an image before running the
# edge detection algorithm for example.
# NOTE: Parameters and filters can be defined below.
###################################################################
# 1.  ADD_SALT_AND_PEPPER_NOISE                 # add defined salt and pepper noise to the image
# 2.  ADD_GAUSSIAN_NOISE                        # add defined gaussian noise to the image
# 3.  RUN_HISTOGRAM_EQUALIZATION                # perform histogram equalization on the image
# 4.  RUN_IMAGE_QUANTIZATION                    # compresses the image to defined compression level and prints MSQE
# 5.  RUN_LINEAR_BOX_SMOOTHING                  # run smoothing algorithm with box filter of greyscale image
# 6.  RUN_LINEAR_GAUSSIAN_SMOOTHING             # run smoothing algorithm with gaussian filter of greyscale image
# 7.  RUN_LINEAR_LAPLACIAN_DIFFERENCE           # run difference algorithm with laplacian filter of greyscale image
# 8.  RUN_MEDIAN_SMOOTHING                      # run median algorithm with median filter of greyscale image
# 9.  CREATE_AVERAGE_HISTOGRAMS                 # create, average, and plot histograms for each class of images
# 10. RUN_K_MEANS_SEGMENTATION                  # k-means segmentation of an RGB image (num clusters defined below)
# 11. RUN_HISTOGRAM_SEGMENTATION                # greyscale segmentation by histogram thresholding
# 12. RUN_EDGE_EROSION                          # runs edge erosion (num layers and structuring element defined below)
# 13. RUN_EDGE_DILATION                         # runs edge dilation (num layers and structuring element defined below)
# 14. RUN_SOBEL_EDGE_DETECTION                  # runs sobel edge detection algorithm  
# 15. RUN_IMPROVED_SOBEL_EDGE_DETECTION         # runs improved sobel edge detection algorithm 
# 16. RUN_PREWITT_EDGE_DETECTION                # runs prewitt edge detection algorithm
# 17. RUN_FEATURE_EXTRACTION                    # extract features from segmented image
###################################################################

###################################################################
# List of functions to run in order e.g. 6,14,12,13 would run 
# smoothing, edge detection, erosion, and dilation functions in order.
# Or 10,14 would run k-means and then edge detection. Image will
# be auto converted from grayscale to rgb or rgb to grayscale depending
# on which direction you are going. The state of the image after
# the last function run is what will be saved.
# 
# Function numbers correspond to those listed above.
###################################################################
FUNCTION_LIST = 10,8,17


###################################################################
# Set path to folder where images are stored (images from this
# folder and all subfolders will be found).
###################################################################
PATH_TO_IMAGES = cell_images_original\


###################################################################
# Extension of images to be loaded and worked on.
###################################################################
IMAGE_EXTENSION = .BMP


###################################################################
# Set path where altered images will be saved.
###################################################################
SAVE_IMAGES_PATH = cell_images_ksegmented\


###################################################################
# Color spectrum of RGB image to utilize for batch operations 
# (Exception is K-means, which will automatically get the rgb image).
#
# Select one of: 
#       grey
#       red 
#       green 
#       blue
#
# Defaults to grey if color is inappropriately defined.
###################################################################
COLOR_SPECTRUM = grey


###################################################################
# The number of cluster centers for K-means segmentation
# (should be positive integer >1).
###################################################################
NUM_K_MEANS_CLUSTERS = 3


###################################################################
# The number of max number of iterations for K-means segmentation
# (should be positive integer >1).
###################################################################
K_MEANS_MAX_ITERATIONS = 50


###################################################################
# Histogram threshold for background/foreground segmentation 
# 0 = compute by minimizing variance within two groups
# (else value should be between 1 and 255)
###################################################################
HISTOGRAM_SEGMENTATION_THRESHOLD = 0


###################################################################
# Magnitude threshold for marking as an edge 
# (should be positive float >0).
###################################################################
EDGE_DETECTION_THRESHOLD = 2.0


###################################################################
# Number of edge layers to remove with erosion 
# (should be positive integer >= 1).
###################################################################
NUM_EROSION_LAYERS = 1


###################################################################
# Number of edge layers to add with dilation 
# (should be positive float >0).
###################################################################
NUM_DILATION_LAYERS = 1


###################################################################
# Strength of gaussian noise to be added
# (should be positive integer >1).
###################################################################
GAUSSIAN_NOISE_STRENGTH = 20


###################################################################
# Number of salt and pepper pixels to add as noise
# (should be positive integer >1).
###################################################################
NUM_SALT_PIXELS = 3000
NUM_PEPPER_PIXELS = 3000


###################################################################
# Number of intensity levels (positive int <255)
# to quantize (compress) image into.
###################################################################
COMPRESSION_LEVEL = 64


###################################################################
# Define your linear box filter weights exactly in this manner
# (leave the quotations as they are). Use this structure as an
# example for how the box filter should be set up.
# Size can be 3x3 5x5 7x7 etc.
# All values should be integers.
###################################################################
LINEAR_BOX_SMOOTHING_FILTER = "
0,0,0,0,0
0,1,1,1,0
0,1,1,1,0
0,1,1,1,0
0,0,0,0,0
"


###################################################################
# Define your linear gaussian filter weights exactly in this manner
# (leave the quotations as they are). Use this structure as an
# example for how the box filter should be set up.
# Size can be 3x3 5x5 7x7 etc.
# All values should be integers.
###################################################################
LINEAR_GAUSSIAN_SMOOTHING_FILTER = "
0,1,2,1,0
1,3,5,3,1
2,5,9,5,2
1,3,5,3,1
0,1,2,1,0
"


###################################################################
# Define your linear laplacian filter weights exactly in this manner
# (leave the quotations as they are). Use this structure as an
# example for how the box filter should be set up.
# Size can be 3x3 5x5 7x7 etc.
# All values should be integers.
###################################################################
LINEAR_LAPLACIAN_DIFFERENCE_FILTER = "
0,0,-1,0,0
0,-1,-2,-1,0
-1,-2,16,-2,-1
0,-1,-2,-1,0
0,0,-1,0,0
"


###################################################################
# Define your median filter weights exactly in this manner
# (leave the quotations as they are). Use this structure as an
# example for how the box filter should be set up.
# Size can be 3x3 5x5 7x7 etc.
# All values should be integers.
###################################################################
MEDIAN_FILTER = "
1,1,1,1,1,1,1
1,1,1,1,1,1,1
1,1,1,1,1,1,1
1,1,1,1,1,1,1
1,1,1,1,1,1,1
1,1,1,1,1,1,1
1,1,1,1,1,1,1
"


###################################################################
# Define your edge dilation structuring element exactly in this manner
# (leave the quotations as they are). Use this structure as an
# example for how the structuring element should be set up.
# True means perform dilation should be performed here. False means do not.
# All values should be booleans, ( True, False ) 
###################################################################
EDGE_DILATION_STRUCTURING_ELEMENT = "
True,True,True
True,True,True
True,True,True
"


###################################################################
# Define your edge erosion structuring element exactly in this manner
# (leave the quotations as they are). Use this structure as an
# example for how the structuring element should be set up.
# True means perform erosion should be performed here. False means do not.
# All values should be booleans, ( True, False ) 
###################################################################
EDGE_EROSION_STRUCTURING_ELEMENT = "
True,True,True
True,True,True
True,True,True
"
